# Generated by Django 2.2.4 on 2019-09-02 06:16

from django.db import migrations, models
import django.db.models.deletion
import mylinks.models.methods
import mytaggit.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mytaggit', '0004_auto_20181009_1248'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(db_index=True, max_length=300, unique=True, validators=[mylinks.models.methods.is_ascii], verbose_name='Embed URL')),
                ('embed', models.TextField(blank=True, default=None, null=True, verbose_name='Embed HTML')),
                ('data', models.TextField(blank=True, default=None, null=True, verbose_name='Embed JSON')),
                ('source', models.TextField(blank=True, default=None, null=True, verbose_name='Page Source HTML')),
            ],
            options={
                'verbose_name': 'Web Conent',
                'verbose_name_plural': 'Web Contents',
            },
            bases=(models.Model, mylinks.models.methods.Content),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Site Host Name')),
                ('name', models.CharField(max_length=100, verbose_name='Site Name')),
                ('brand', models.TextField(blank=True, default=None, null=True, verbose_name='Site Brand')),
            ],
            options={
                'verbose_name': ' Site',
                'verbose_name_plural': ' Site',
            },
            bases=(models.Model, mylinks.models.methods.Site),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(db_index=True, max_length=300, unique=True, validators=[mylinks.models.methods.is_ascii], verbose_name='Link URL')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Title')),
                ('visited_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mylinks.Content')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mylinks.Site')),
                ('tags', mytaggit.models.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mytaggit.TaggedItem', to='mytaggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Web Link',
                'verbose_name_plural': 'Web Link',
            },
            bases=(models.Model, mylinks.models.methods.Link),
        ),
    ]
