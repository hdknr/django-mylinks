# Generated by Django 2.2.4 on 2019-09-07 08:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mylinks.models.methods
import mytaggit.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('mytaggit', '0004_auto_20181009_1248'),
    ]

    operations = [
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('url', models.CharField(db_index=True, max_length=300, unique=True, validators=[mylinks.models.methods.is_ascii], verbose_name='Link URL')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Title')),
                ('visited_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Web Link',
                'verbose_name_plural': 'Web Link',
            },
            bases=(models.Model, mylinks.models.methods.Link),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('host', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Site Host Name')),
                ('name', models.CharField(max_length=100, verbose_name='Site Name')),
                ('brand', models.TextField(blank=True, default=None, null=True, verbose_name='Site Brand')),
            ],
            options={
                'verbose_name': ' Site',
                'verbose_name_plural': ' Site',
            },
            bases=(models.Model, mylinks.models.methods.Site),
        ),
        migrations.CreateModel(
            name='Embed',
            fields=[
                ('link_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mylinks.Link')),
                ('html', models.TextField(blank=True, default=None, null=True, verbose_name='Embed HTML')),
                ('data', models.TextField(blank=True, default=None, null=True, verbose_name='Embed JSON')),
                ('source', models.TextField(blank=True, default=None, null=True, verbose_name='Page Source HTML')),
            ],
            options={
                'verbose_name': 'Web Embed',
                'verbose_name_plural': 'Web Embed',
            },
            bases=('mylinks.link', models.Model, mylinks.models.methods.Embed),
        ),
        migrations.AddField(
            model_name='link',
            name='site',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mylinks.Site'),
        ),
        migrations.AddField(
            model_name='link',
            name='subclass_type',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to={'app_label': 'mylinks'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType', verbose_name='Subclass Type'),
        ),
        migrations.AddField(
            model_name='link',
            name='tags',
            field=mytaggit.models.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mytaggit.TaggedItem', to='mytaggit.Tag', verbose_name='Tags'),
        ),
    ]
